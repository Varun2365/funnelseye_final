{
	"info": {
		"_postman_id": "ae84ddab-1d7c-4caf-a8cd-4144f09380db",
		"name": "Payment System V1 - Consolidated API Collection",
		"description": "Complete API collection for testing the consolidated Payment System V1 with Razorpay integration. Includes Authentication, Product Management, Payment Processing, Payouts, and Transaction Tracking.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40167623"
	},
	"item": [
		{
			"name": "üîê Authentication & Setup",
			"item": [
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('adminToken', response.token);",
									"    pm.collectionVariables.set('adminId', response.admin.id);",
									"    console.log('Admin Token saved:', response.token);",
									"    console.log('Admin ID saved:', response.admin.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@funnelseye.com\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{authBaseUrl}}/admin/auth/login",
							"host": [
								"{{authBaseUrl}}"
							],
							"path": [
								"admin",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Coach Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('coachToken', response.token);",
									"    pm.collectionVariables.set('coachId', response.user._id);",
									"    console.log('Coach Token saved:', response.token);",
									"    console.log('Coach ID saved:', response.user._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"coach@example.com\",\n  \"password\": \"coach123\"\n}"
						},
						"url": {
							"raw": "{{authBaseUrl}}/auth/login",
							"host": [
								"{{authBaseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Razorpay Configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"keyId\": \"rzp_test_YOUR_KEY_ID\",\n  \"keySecret\": \"YOUR_KEY_SECRET\",\n  \"accountNumber\": \"\",\n  \"webhookSecret\": \"YOUR_WEBHOOK_SECRET\",\n  \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/razorpay-config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"razorpay-config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Razorpay Module",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/test-razorpay",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"test-razorpay"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Razorpay Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/razorpay-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"razorpay-status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup Coach Payment Collection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"upiId\": \"coach@paytm\",\n  \"paymentCollectionMethod\": \"upi\",\n  \"bankAccount\": {\n    \"accountHolderName\": \"John Doe\",\n    \"accountNumber\": \"1234567890\",\n    \"ifscCode\": \"SBIN0001234\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/setup-coach-payment-collection/{{coachId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"setup-coach-payment-collection",
								"{{coachId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üì¶ Admin Product Management",
			"item": [
				{
					"name": "Create Admin Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('productId', response.data._id);",
									"    console.log('Product ID saved:', response.data._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Premium Fitness Transformation Program\",\n  \"description\": \"A comprehensive 12-week fitness program designed for complete body transformation. Includes workout plans, nutrition guides, and progress tracking.\",\n  \"shortDescription\": \"Complete fitness transformation in 12 weeks\",\n  \"category\": \"fitness_training\",\n  \"productType\": \"digital\",\n  \"basePrice\": 2999,\n  \"currency\": \"INR\",\n  \"pricingRules\": {\n    \"allowCustomPricing\": true,\n    \"minPrice\": 1999,\n    \"maxPrice\": 4999,\n    \"suggestedMarkup\": 20\n  },\n  \"features\": [\n    {\n      \"title\": \"12-Week Structured Program\",\n      \"description\": \"Progressive workout plans for all fitness levels\",\n      \"icon\": \"calendar\"\n    },\n    {\n      \"title\": \"Nutrition Guidance\",\n      \"description\": \"Complete meal plans and recipes\",\n      \"icon\": \"food\"\n    },\n    {\n      \"title\": \"Video Demonstrations\",\n      \"description\": \"HD video tutorials for all exercises\",\n      \"icon\": \"play\"\n    },\n    {\n      \"title\": \"Progress Tracking\",\n      \"description\": \"Built-in tools to track your transformation\",\n      \"icon\": \"chart\"\n    }\n  ],\n  \"contentFiles\": [\n    {\n      \"fileName\": \"workout-plan.pdf\",\n      \"fileUrl\": \"/uploads/workout-plan.pdf\",\n      \"fileSize\": 2048000,\n      \"fileType\": \"application/pdf\",\n      \"isDownloadable\": true\n    }\n  ],\n  \"videoContent\": [\n    {\n      \"title\": \"Program Introduction\",\n      \"videoUrl\": \"/uploads/intro-video.mp4\",\n      \"duration\": 300,\n      \"thumbnail\": \"/uploads/intro-thumbnail.jpg\"\n    }\n  ],\n  \"termsAndConditions\": \"By purchasing this program, you agree to follow the workout plans safely and consult a healthcare provider if needed.\",\n  \"refundPolicy\": \"Full refund available within 7 days of purchase.\",\n  \"commissionSettings\": {\n    \"platformCommissionPercentage\": 10,\n    \"coachCommissionPercentage\": 80\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Admin Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/products?page=1&limit=20&status=active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products for Coaches",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/products/available-for-coaches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products",
								"available-for-coaches"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/products/{{productId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"products",
								"{{productId}}",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üéØ Coach Plan Management",
			"item": [
				{
					"name": "Create Coach Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('planId', response.data.planId);",
									"    console.log('Plan ID saved:', response.data.planId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"adminProductId\": \"{{productId}}\",\n  \"title\": \"Elite Fitness Transformation with Personal Coaching\",\n  \"description\": \"Transform your body with my personalized approach to fitness. This premium program includes everything from the base program plus exclusive personal coaching sessions and custom meal plans tailored to your specific goals.\",\n  \"shortDescription\": \"Premium fitness program with personal coaching\",\n  \"price\": 3999,\n  \"additionalFeatures\": [\n    {\n      \"title\": \"Weekly Personal Coaching Calls\",\n      \"description\": \"30-minute one-on-one coaching sessions every week\",\n      \"icon\": \"phone\"\n    },\n    {\n      \"title\": \"Custom Meal Plans\",\n      \"description\": \"Personalized nutrition plans based on your goals and preferences\",\n      \"icon\": \"food\"\n    },\n    {\n      \"title\": \"24/7 WhatsApp Support\",\n      \"description\": \"Direct access to me via WhatsApp for questions and motivation\",\n      \"icon\": \"message\"\n    }\n  ],\n  \"additionalContentFiles\": [\n    {\n      \"fileName\": \"bonus-workouts.pdf\",\n      \"fileUrl\": \"/uploads/bonus-workouts.pdf\",\n      \"fileSize\": 1024000,\n      \"fileType\": \"application/pdf\",\n      \"isDownloadable\": true\n    }\n  ],\n  \"customTermsAndConditions\": \"This premium program includes personal coaching sessions. All sessions must be scheduled at least 24 hours in advance.\",\n  \"customRefundPolicy\": \"Full refund available within 30 days of purchase.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/coach/plans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach",
								"plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Coach Plans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/coach/plans?page=1&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach",
								"plans"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Plan Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/coach/plans/{{planId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach",
								"plans",
								"{{planId}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Make Plan Public",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isPublic\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/coach/plans/{{planId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach",
								"plans",
								"{{planId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Coach Plan Stats",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/coach/plans/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach",
								"plans",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üåê Public Plan Access",
			"item": [
				{
					"name": "Get Public Plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/public/plans?page=1&limit=20&category=fitness_training",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public",
								"plans"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "category",
									"value": "fitness_training"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Plan Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/public/plans/{{planId}}/details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public",
								"plans",
								"{{planId}}",
								"details"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üí≥ Payment Processing",
			"item": [
				{
					"name": "Create Coach Plan Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('orderId', response.data.orderId);",
									"    console.log('Order ID saved:', response.data.orderId);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"planId\": \"68c01bcf9c917957e7393b0e\",\n  \"customerId\": \"test_customer_123\",\n  \"customerEmail\": \"test@example.com\",\n  \"customerPhone\": \"+919876543210\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/coach-plan/create-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"coach-plan",
								"create-order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Subscription Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coachId\": \"coach_123\",\n  \"subscriptionPlan\": \"professional\",\n  \"amount\": 999,\n  \"billingCycle\": \"monthly\",\n  \"customerEmail\": \"coach@example.com\",\n  \"customerPhone\": \"+919876543210\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/subscription/create-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"subscription",
								"create-order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Payment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"razorpay_order_id\": \"{{orderId}}\",\n  \"razorpay_payment_id\": \"{{paymentId}}\",\n  \"razorpay_signature\": \"{{signature}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/payments/{{paymentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payments",
								"{{paymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Refund",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 1999,\n  \"reason\": \"Customer requested partial refund\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/payments/{{paymentId}}/refund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"payments",
								"{{paymentId}}",
								"refund"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üõí Checkout Page System",
			"item": [
				{
					"name": "Get Coach Plan Checkout Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receiving/checkout/coach-plan/{{planId}}?customerId=test_customer_123&customerEmail=test@example.com&customerPhone=+919876543210",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"checkout",
								"coach-plan",
								"{{planId}}"
							],
							"query": [
								{
									"key": "customerId",
									"value": "test_customer_123"
								},
								{
									"key": "customerEmail",
									"value": "test@example.com"
								},
								{
									"key": "customerPhone",
									"value": "+919876543210"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Subscription Checkout Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receiving/checkout/subscription?coachId=coach_123&subscriptionPlan=professional&billingCycle=monthly&amount=999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"checkout",
								"subscription"
							],
							"query": [
								{
									"key": "coachId",
									"value": "coach_123"
								},
								{
									"key": "subscriptionPlan",
									"value": "professional"
								},
								{
									"key": "billingCycle",
									"value": "monthly"
								},
								{
									"key": "amount",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Checkout Completion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"paymentId\": \"{{paymentId}}\",\n  \"signature\": \"{{signature}}\",\n  \"planId\": \"{{planId}}\",\n  \"customerId\": \"test_customer_123\",\n  \"customerEmail\": \"test@example.com\",\n  \"customerPhone\": \"+919876543210\",\n  \"businessType\": \"coach_plan_purchase\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/checkout/complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"checkout",
								"complete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payment History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/checkout/payment-history/test_customer_123?page=1&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"checkout",
								"payment-history",
								"test_customer_123"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Checkout URL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"planId\": \"{{planId}}\",\n  \"businessType\": \"coach_plan_purchase\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/checkout/generate-url",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"checkout",
								"generate-url"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîó Webhook Testing",
			"item": [
				{
					"name": "Payment Captured Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Razorpay-Signature",
								"value": "{{webhookSignature}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"payment.captured\",\n  \"payload\": {\n    \"payment\": {\n      \"entity\": {\n        \"id\": \"{{paymentId}}\",\n        \"order_id\": \"{{orderId}}\",\n        \"amount\": 399900,\n        \"currency\": \"INR\",\n        \"status\": \"captured\",\n        \"method\": \"card\",\n        \"bank\": \"HDFC\",\n        \"wallet\": null,\n        \"vpa\": null\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment Failed Webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Razorpay-Signature",
								"value": "{{webhookSignature}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"payment.failed\",\n  \"payload\": {\n    \"payment\": {\n      \"entity\": {\n        \"id\": \"pay_failed_1234567890\",\n        \"order_id\": \"order_failed_1234567890\",\n        \"amount\": 399900,\n        \"currency\": \"INR\",\n        \"status\": \"failed\",\n        \"error_code\": \"BAD_REQUEST_ERROR\",\n        \"error_description\": \"Payment failed due to insufficient funds\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"webhook"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üì• Payment Receiving System (Money IN)",
			"item": [
				{
					"name": "Create Razorpay Order (Receiving)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('receivingOrderId', response.data.razorpay_order_id);",
									"    console.log('Receiving Order ID saved:', response.data.razorpay_order_id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 3999,\n  \"currency\": \"INR\",\n  \"receipt\": \"receipt_receiving_001\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/create-razorpay-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"create-razorpay-order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Coach Plan Order (Receiving)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"planId\": \"{{planId}}\",\n  \"customerId\": \"customer_123\",\n  \"customerEmail\": \"customer@example.com\",\n  \"customerPhone\": \"+919876543210\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/coach-plan/create-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"coach-plan",
								"create-order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Subscription Order (Receiving)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coachId\": \"{{coachId}}\",\n  \"subscriptionPlan\": \"professional\",\n  \"amount\": 999,\n  \"billingCycle\": \"monthly\",\n  \"customerEmail\": \"coach@example.com\",\n  \"customerPhone\": \"+919876543210\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/subscription/create-order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"subscription",
								"create-order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Payment (Receiving)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"razorpay_order_id\": \"{{receivingOrderId}}\",\n  \"razorpay_payment_id\": \"pay_test_123\",\n  \"razorpay_signature\": \"test_signature_123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/receiving/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check (Receiving)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/receiving/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"receiving",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üì§ Payment Sending System (Money OUT)",
			"item": [
				{
					"name": "Request Payout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('payoutId', response.data.payoutId);",
									"    console.log('Payout ID saved:', response.data.payoutId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 1500,\n  \"payoutMethod\": \"upi\",\n  \"notes\": \"Monthly commission payout\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/request-payout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"request-payout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Payout (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payoutId\": \"{{payoutId}}\",\n  \"action\": \"approve\",\n  \"notes\": \"Approved by admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/process-payout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"process-payout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Coach Earnings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/coach-earnings/{{coachId}}?period=current",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"coach-earnings",
								"{{coachId}}"
							],
							"query": [
								{
									"key": "period",
									"value": "current"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Available Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/available-balance/{{coachId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"available-balance",
								"{{coachId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Payout History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/payout-history/{{coachId}}?page=1&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"payout-history",
								"{{coachId}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pending Payouts (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/pending-payouts?page=1&limit=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"pending-payouts"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Automatic Payouts (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"payoutType\": \"commission\",\n  \"period\": \"current\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/automatic-payouts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"automatic-payouts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check (Sending)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sending/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üöÄ Razorpay Payout System (Real Money)",
			"item": [
				{
					"name": "Setup Coach for Razorpay Payouts (Admin Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('razorpayContactId', response.data.contactId);",
									"    pm.collectionVariables.set('razorpayFundAccountId', response.data.fundAccountId);",
									"    console.log('Razorpay Contact ID saved:', response.data.contactId);",
									"    console.log('Razorpay Fund Account ID saved:', response.data.fundAccountId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/setup-razorpay-coach/{{coachId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"setup-razorpay-coach",
								"{{coachId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Single Razorpay Payout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('razorpayPayoutId', response.data.payoutId);",
									"    pm.collectionVariables.set('razorpayTransactionId', response.data.transactionId);",
									"    console.log('Razorpay Payout ID saved:', response.data.payoutId);",
									"    console.log('Transaction ID saved:', response.data.transactionId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coachId\": \"{{coachId}}\",\n  \"amount\": 2500,\n  \"currency\": \"INR\",\n  \"purpose\": \"payout\",\n  \"mode\": \"IMPS\",\n  \"narration\": \"Manual payout - Test Coach - FunnelsEye\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/razorpay-payout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"razorpay-payout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Monthly Razorpay Payouts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"period\": \"current\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/monthly-razorpay-payouts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"monthly-razorpay-payouts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Razorpay Payout Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/razorpay-payout-status/{{razorpayPayoutId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"razorpay-payout-status",
								"{{razorpayPayoutId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Razorpay Payout Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/sync-razorpay-status/{{razorpayPayoutId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"sync-razorpay-status",
								"{{razorpayPayoutId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Razorpay Payout (Small Amount)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"coachId\": \"{{coachId}}\",\n  \"amount\": 100,\n  \"currency\": \"INR\",\n  \"purpose\": \"payout\",\n  \"mode\": \"UPI\",\n  \"narration\": \"Test payout - ‚Çπ1 - FunnelsEye\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/razorpay-payout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"razorpay-payout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìä Coach Transaction Dashboard",
			"item": [
				{
					"name": "Get Coach Dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/coach-transactions/dashboard/{{coachId}}?period=current",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach-transactions",
								"dashboard",
								"{{coachId}}"
							],
							"query": [
								{
									"key": "period",
									"value": "current"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/coach-transactions/history/{{coachId}}?page=1&limit=20&sortBy=transactionDate&sortOrder=desc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach-transactions",
								"history",
								"{{coachId}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "sortBy",
									"value": "transactionDate"
								},
								{
									"key": "sortOrder",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/coach-transactions/transaction/{{transactionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach-transactions",
								"transaction",
								"{{transactionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export Transactions (CSV)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{coachToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/coach-transactions/export/{{coachId}}?format=csv&startDate=2024-01-01&endDate=2024-12-31",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach-transactions",
								"export",
								"{{coachId}}"
							],
							"query": [
								{
									"key": "format",
									"value": "csv"
								},
								{
									"key": "startDate",
									"value": "2024-01-01"
								},
								{
									"key": "endDate",
									"value": "2024-12-31"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Health Check (Transactions)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/coach-transactions/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"coach-transactions",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üí∞ MLM Commission Management",
			"item": [
				{
					"name": "Get MLM Commission Settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/mlm-commission-settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"mlm-commission-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update MLM Commission Settings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mlmLevels\": [\n    {\n      \"level\": 1,\n      \"percentage\": 10,\n      \"isActive\": true\n    },\n    {\n      \"level\": 2,\n      \"percentage\": 5,\n      \"isActive\": true\n    },\n    {\n      \"level\": 3,\n      \"percentage\": 3,\n      \"isActive\": true\n    },\n    {\n      \"level\": 4,\n      \"percentage\": 2,\n      \"isActive\": true\n    },\n    {\n      \"level\": 5,\n      \"percentage\": 1,\n      \"isActive\": true\n    }\n  ],\n  \"minimumPayoutAmount\": 500\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/update-mlm-commission-settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"update-mlm-commission-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get MLM Commission Summary for Coach",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sending/mlm-commission-summary/{{coachId}}?period={{mlmCommissionPeriod}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"mlm-commission-summary",
								"{{coachId}}"
							],
							"query": [
								{
									"key": "period",
									"value": "{{mlmCommissionPeriod}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Monthly MLM Commission Payouts (Dry Run)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"period\": \"{{mlmCommissionPeriod}}\",\n  \"dryRun\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/monthly-mlm-commission-payouts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"monthly-mlm-commission-payouts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Process Monthly MLM Commission Payouts (Live)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"period\": \"{{mlmCommissionPeriod}}\",\n  \"dryRun\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/sending/monthly-mlm-commission-payouts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sending",
								"monthly-mlm-commission-payouts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üè• System Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api/paymentsv1",
			"description": "Base URL for the consolidated payment system"
		},
		{
			"key": "authBaseUrl",
			"value": "http://localhost:8080/api",
			"description": "Base URL for authentication endpoints"
		},
		{
			"key": "adminToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbklkIjoiNjhhYzk2OWViYmNlODNkNzNhNDY1YzM2Iiwicm9sZSI6ImFkbWluIiwidHlwZSI6ImFkbWluIiwiaWF0IjoxNzU3MzQ5MTA4LCJleHAiOjE3NTc0MzU1MDh9.CVYjl1TQk_XFOOXrKXB6yNLGwcXKuo1B7nsWYmKTeGc",
			"description": "Admin authentication token"
		},
		{
			"key": "coachToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4YTljODJhNzUzYTNkMTJlNjk2ZWMzZCIsInJvbGUiOiJjb2FjaCIsImlhdCI6MTc1NjY2NzgwNiwiZXhwIjoxNzU5MjU5ODA2fQ.WQuXdqi_I__4wB_sN5B-0QB55B9TTJm-p9FDi7dLn4c",
			"description": "Coach authentication token"
		},
		{
			"key": "coachId",
			"value": "68a9c82a753a3d12e696ec3d",
			"description": "Coach ID for testing"
		},
		{
			"key": "productId",
			"value": "68bf090e29b26ec60f7146b0",
			"description": "Admin product ID"
		},
		{
			"key": "planId",
			"value": "68c01d751a96b7805992524a",
			"description": "Coach plan ID"
		},
		{
			"key": "orderId",
			"value": "",
			"description": "Payment order ID (auto-populated)"
		},
		{
			"key": "receivingOrderId",
			"value": "",
			"description": "Receiving payment order ID (auto-populated)"
		},
		{
			"key": "paymentId",
			"value": "",
			"description": "Payment ID (auto-populated)"
		},
		{
			"key": "payoutId",
			"value": "",
			"description": "Payout ID (auto-populated)"
		},
		{
			"key": "transactionId",
			"value": "",
			"description": "Transaction ID (auto-populated)"
		},
		{
			"key": "webhookSignature",
			"value": "test_signature_123",
			"description": "Webhook signature for testing"
		},
		{
			"key": "razorpayContactId",
			"value": "",
			"description": "Razorpay contact ID (auto-populated)"
		},
		{
			"key": "razorpayFundAccountId",
			"value": "",
			"description": "Razorpay fund account ID (auto-populated)"
		},
		{
			"key": "razorpayPayoutId",
			"value": "",
			"description": "Razorpay payout ID (auto-populated)"
		},
		{
			"key": "razorpayTransactionId",
			"value": "",
			"description": "Razorpay transaction ID (auto-populated)"
		},
		{
			"key": "mlmCommissionPeriod",
			"value": "2024-01",
			"description": "MLM commission period (YYYY-MM format)"
		}
	]
}